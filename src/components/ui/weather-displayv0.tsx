/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/UWIqe3o2j8L
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

import { useState } from 'react';
import WeatherForm from './WeatherForm';

export function WeatherDisplayv0() {
  type Units = 'standard' | 'imperial' | 'metric';
  const [location, setLocation] = useState('Detroit');
  const [temperature, setTemperature] = useState(69);
  const [units, setUnits] = useState<Units>('imperial');
  const [iconUrl, setIconUrl] = useState('');
  const [conditionStr, setConditionStr] = useState('');

  return (
    <div
      key='1'
      className='flex items-center justify-center h-screen w-screen bg-gradient-to-br from-sky-400 to-indigo-500'
    >
      <div className='bg-white dark:bg-gray-900 p-4 rounded-lg shadow-lg max-w-sm w-full'>
        <div className='mb-4'>
          <h2 className='text-3xl font-bold text-center text-gray-900 dark:text-gray-100'>
            {location}
          </h2>
        </div>
        <div className='flex flex-col items-center justify-center gap-6'>
          <div className='flex items-center gap-4'>
            <img src={`https://openweathermap.org/img/wn/${iconUrl}@2x.png`} />
            <div>
              <div className='text-6xl font-bold text-gray-900 dark:text-gray-100'>
                {temperature}Â°{units === 'imperial' ? 'F' : 'C'}
              </div>
              <div className='text-gray-600 dark:text-gray-400'>
                {conditionStr}
              </div>
            </div>
          </div>
        </div>
        <div className='mt-6'>
          <WeatherForm
            setLocation={setLocation}
            setTemperature={setTemperature}
            setConditionStr={setConditionStr}
            setIconUrl={setIconUrl}
          />
        </div>
      </div>
    </div>
  );
}

function WeatherIcon(props: { condition: string }) {
  return <div></div>;
}

function CloudIcon(props: { className: string }) {
  return (
    <svg
      {...props}
      xmlns='http://www.w3.org/2000/svg'
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      stroke='currentColor'
      strokeWidth='2'
      strokeLinecap='round'
      strokeLinejoin='round'
    >
      <path d='M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z' />
    </svg>
  );
}
